import marimo

__generated_with = "0.9.8"
app = marimo.App()


@app.cell(hide_code=True)
def __(mo):
    mo.md(
        r"""
        ## [Counting Point Mutations](https://rosalind.info/problems/hamm/)

        ### Problem
        Given two strings `s` and `t` of equal length, the Hamming distance between `s` and `t` – denoted `dH(s,t)` – is the number of corresponding symbols that differ between the two strings.

        **Given:** Two DNA strings s and t of equal length (not exceeding 1 kbp).

        **Return:** The Hamming distance `dH(s,t)`.

        ### Example
        Input:
        ```
        GAGCCTACTAACGGGAT
        CATCGTAATGACGGCCT
        ```

        Output:
        ```
        7
        ```
        """
    )
    return


@app.cell
def __():
    def hamming_distance(strand_1: str, strand_2: str):
        """Returns Hamming distance between two DNA strands of equal length."""

        hamming = 0

        for index in range(len(strand_1)):
            if strand_1[index] != strand_2[index]:
                hamming += 1

        return hamming
    return (hamming_distance,)


@app.cell
def __(hamming_distance):
    expected = 7
    actual = hamming_distance("GAGCCTACTAACGGGAT", "CATCGTAATGACGGCCT")
    assert actual == expected
    return actual, expected


@app.cell
def __(hamming_distance):
    strand_1 = "CAAAGGCGGAATGCTACCCGTGATGTGTTCGGCCGACTCACGCCTGAACCGCAATAACACACCAACCGCGGCACGATCTGAAACCCCGGTAATGACTCGGTCTGGTCAAGCATCTTCCGTTATCTAGCACCGCGTGGTTAAGCCTGGTCGGGAACTGCACGTAGTCAGATTGGAATTCATCCTTAAAGATGCTCGTGTAGGGATCCATGCAACTGCTTTAAAGGCACTGGACCGGAGGCCAGTTACTAACTACATCCGGTTCTAACAAGCAGGCCGCATTGCAGGATAACAGCGGGGCCTCTGATAGCCGTAGGGGAAGCTTCGGTAAGGGGGAACGGGGCAACACTCTGCGGCAGATGAGTACGGTTAAATCGCGGACAGAGAGCGTTGCAAACGGCCTGAGATACGCCATACAGCTCGCTAATCCGGAACAATACCGCTACATTTGAGATAACCATCCTGTTACCTGGGATTGATTTTGATAGGCCCACCATATAAAACCTGATTTAAACGCATCGGCCAGTAGAACAGGCTCTGCCTCTGGATCATAAGCCTTGAGGTTAGCTAATACGCATCTGATCGAACTCTGAGTGCCTGTCTCCTCTATGAAGCAGATGCTGTCTCCATTAAGCAGCGAAGTTAAAGCGGCTATATTGAAAGTTCTGGGGCCCAGGACGAGAAGAAACCGGGGATGTTTGACCAATTTGTCTAGGCATAAAAAAGGGACGGAAGTGGATTCATAGCGTGCCACAGGCGTGCTGGTGTTGCCCCCCGCTCCAGAAGACGCGAAATGAAGATTAAGGAGCAGAGTCGCCCGTCGCACGCAGTTAACTAGTCGTGCATACACTGCGAAAAGCAACTCAGTTGCGTATCAGCCAAGTGTGTCCTGGACACCTTTACTAGACCGAGGAAATAGCAATCTATTCGGATTTGTGCTCCCCCGAACATCCTCTAGCGGCTTTCTGTACACTGC"

    strand_2 = "CTAACTCTGAGCGCCGCGCGTGTACCAATGCACCGACTCTGGCCCCAGCCGCAGTTACACACGTACTGCGCCAAGATATGACACATCGGTTATGTCAGCGTTGGTGCCGCCGTCGTCGCACAGTATCGTCGTGAGGGGAAACCCTCTACTGCAAGTGCACGTAATCATCTAGTACTGCATGCATCGAGATACTTCTGTTTGGGCCTATGAACTTGCTGAAGTGCCTCTAGGCTGGTGTTTAATGGTTCGGAAGAGTCGGTGCTAACGTTGTAGCTACTGTGATAGATTCGATCTAGACCTTTGTATTGCAAATAACACGCGACGATAACGTGGATCGGCGCACTCCGCTAAATGTGATAAATAGTGGTTGCTACCCCACACAGCGGGAAGCGCACACCCCGCTATACGCGGCTGCGCTTTCAGACTCGGATTTATGCCCACACGCTGTAGTCAAGCATTATTACACTATGGAGTTATTTTGTTCCGCCTCCCCTACATCCCCTGAGTTAACCAACCGTCCCATGACGTCTCAAGCTCCCGCATGTCACTGCTCCTTGGCATGAGCGATCAAGGATCGGAACGGGGTGTCACTCTCTGATACTGGCGGAATAGAGGCGTGTTCCCAATCTTTCTCCTGCATTACTGCCTCGGAAACGACATGTGTGGGACCCAGGAAGTGGTGGCCCCGCTGGGGAGTGCCGCTTATGGCTATTTATCGATTGCGCTCTCAACCGTAGTCGCAGCGCGGCGCATCCCGGGTGGCGTTGGCCCGCCTTCCAGCACATCACTCAGGTATCTTGAAGATTTTTTTGGAGCGTAGCACGAAATTAAGTAACCCTGTTGTCATTGGGAGAAAGAGGTAGGGCGCTTAAGTGACCAAATGTGGCCAGCCATATTGTGTTTACCGATAATCCAGCGCGTACGTCGCATCCGTACTTATCGGCTATTGAACAGGGTGGGTACGTAATCCAGT"

    print(hamming_distance(strand_1, strand_2))
    return strand_1, strand_2


@app.cell
def __():
    import marimo as mo
    return (mo,)


if __name__ == "__main__":
    app.run()
